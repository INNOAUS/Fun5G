# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: device_config.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
from google.protobuf import descriptor_pb2
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor.FileDescriptor(
  name='device_config.proto',
  package='device_config',
  syntax='proto3',
  serialized_pb=_b('\n\x13\x64\x65vice_config.proto\x12\rdevice_config\"3\n\x11\x45\x64itConfigRequest\x12\x0f\n\x07\x63ommand\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t\"f\n\x12\x45\x64itConfigResponse\x12\x0f\n\x07\x63hannel\x18\x01 \x01(\t\x12\x0f\n\x07hw_mode\x18\x02 \x01(\t\x12\n\n\x02ip\x18\x03 \x01(\t\x12\x14\n\x0cpower_on_off\x18\x04 \x01(\t\x12\x0c\n\x04ssid\x18\x05 \x01(\t\"#\n\x10GetConfigRequest\x12\x0f\n\x07\x63ommand\x18\x01 \x01(\t\"e\n\x11GetConfigResponse\x12\x0f\n\x07\x63hannel\x18\x01 \x01(\t\x12\x0f\n\x07hw_mode\x18\x02 \x01(\t\x12\n\n\x02ip\x18\x03 \x01(\t\x12\x14\n\x0cpower_on_off\x18\x04 \x01(\t\x12\x0c\n\x04ssid\x18\x05 \x01(\t\"\x1d\n\x0cHelloRequest\x12\r\n\x05hello\x18\x01 \x01(\t\"a\n\rHelloResponse\x12\x0f\n\x07\x63hannel\x18\x01 \x01(\t\x12\x0f\n\x07hw_mode\x18\x02 \x01(\t\x12\n\n\x02ip\x18\x03 \x01(\t\x12\x14\n\x0cpower_on_off\x18\x04 \x01(\t\x12\x0c\n\x04ssid\x18\x05 \x01(\t\"\x1e\n\x0bLockRequest\x12\x0f\n\x07locking\x18\x01 \x01(\x08\"\x1e\n\x0cLockResponse\x12\x0e\n\x06result\x18\x01 \x01(\x08\"\xd8\x02\n\x07\x44\x65vices\x12\x38\n\x0c\x61\x63\x63\x65ss_point\x18\x01 \x01(\x0b\x32\".device_config.Devices.AccessPoint\x12G\n\x14lora_wan_information\x18\x02 \x01(\x0b\x32).device_config.Devices.LoraWanInformation\x1a\xa5\x01\n\x0b\x41\x63\x63\x65ssPoint\x12\x31\n\x02\x61p\x18\x01 \x03(\x0b\x32%.device_config.Devices.AccessPoint.Ap\x1a\x63\n\x02\x41p\x12\x0f\n\x07\x63hannel\x18\x01 \x01(\t\x12\x0f\n\x07hw_mode\x18\x02 \x01(\t\x12\n\n\x02ip\x18\x03 \x01(\t\x12\x14\n\x0cpower_on_off\x18\x04 \x01(\t\x12\x0c\n\x04ssid\x18\x05 \x01(\t\x12\x0b\n\x03uid\x18\x06 \x01(\r\x1a\"\n\x12LoraWanInformation\x12\x0c\n\x04temp\x18\x01 \x01(\t2\xb6\x02\n\x0c\x44\x65viceConfig\x12Q\n\nEditConfig\x12 .device_config.EditConfigRequest\x1a!.device_config.EditConfigResponse\x12N\n\tGetConfig\x12\x1f.device_config.GetConfigRequest\x1a .device_config.GetConfigResponse\x12\x42\n\x05Hello\x12\x1b.device_config.HelloRequest\x1a\x1c.device_config.HelloResponse\x12?\n\x04Lock\x12\x1a.device_config.LockRequest\x1a\x1b.device_config.LockResponseb\x06proto3')
)
_sym_db.RegisterFileDescriptor(DESCRIPTOR)




_EDITCONFIGREQUEST = _descriptor.Descriptor(
  name='EditConfigRequest',
  full_name='device_config.EditConfigRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='command', full_name='device_config.EditConfigRequest.command', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='value', full_name='device_config.EditConfigRequest.value', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=38,
  serialized_end=89,
)


_EDITCONFIGRESPONSE = _descriptor.Descriptor(
  name='EditConfigResponse',
  full_name='device_config.EditConfigResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='channel', full_name='device_config.EditConfigResponse.channel', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='hw_mode', full_name='device_config.EditConfigResponse.hw_mode', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='ip', full_name='device_config.EditConfigResponse.ip', index=2,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='power_on_off', full_name='device_config.EditConfigResponse.power_on_off', index=3,
      number=4, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='ssid', full_name='device_config.EditConfigResponse.ssid', index=4,
      number=5, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=91,
  serialized_end=193,
)


_GETCONFIGREQUEST = _descriptor.Descriptor(
  name='GetConfigRequest',
  full_name='device_config.GetConfigRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='command', full_name='device_config.GetConfigRequest.command', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=195,
  serialized_end=230,
)


_GETCONFIGRESPONSE = _descriptor.Descriptor(
  name='GetConfigResponse',
  full_name='device_config.GetConfigResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='channel', full_name='device_config.GetConfigResponse.channel', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='hw_mode', full_name='device_config.GetConfigResponse.hw_mode', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='ip', full_name='device_config.GetConfigResponse.ip', index=2,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='power_on_off', full_name='device_config.GetConfigResponse.power_on_off', index=3,
      number=4, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='ssid', full_name='device_config.GetConfigResponse.ssid', index=4,
      number=5, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=232,
  serialized_end=333,
)


_HELLOREQUEST = _descriptor.Descriptor(
  name='HelloRequest',
  full_name='device_config.HelloRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='hello', full_name='device_config.HelloRequest.hello', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=335,
  serialized_end=364,
)


_HELLORESPONSE = _descriptor.Descriptor(
  name='HelloResponse',
  full_name='device_config.HelloResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='channel', full_name='device_config.HelloResponse.channel', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='hw_mode', full_name='device_config.HelloResponse.hw_mode', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='ip', full_name='device_config.HelloResponse.ip', index=2,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='power_on_off', full_name='device_config.HelloResponse.power_on_off', index=3,
      number=4, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='ssid', full_name='device_config.HelloResponse.ssid', index=4,
      number=5, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=366,
  serialized_end=463,
)


_LOCKREQUEST = _descriptor.Descriptor(
  name='LockRequest',
  full_name='device_config.LockRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='locking', full_name='device_config.LockRequest.locking', index=0,
      number=1, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=465,
  serialized_end=495,
)


_LOCKRESPONSE = _descriptor.Descriptor(
  name='LockResponse',
  full_name='device_config.LockResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='result', full_name='device_config.LockResponse.result', index=0,
      number=1, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=497,
  serialized_end=527,
)


_DEVICES_ACCESSPOINT_AP = _descriptor.Descriptor(
  name='Ap',
  full_name='device_config.Devices.AccessPoint.Ap',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='channel', full_name='device_config.Devices.AccessPoint.Ap.channel', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='hw_mode', full_name='device_config.Devices.AccessPoint.Ap.hw_mode', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='ip', full_name='device_config.Devices.AccessPoint.Ap.ip', index=2,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='power_on_off', full_name='device_config.Devices.AccessPoint.Ap.power_on_off', index=3,
      number=4, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='ssid', full_name='device_config.Devices.AccessPoint.Ap.ssid', index=4,
      number=5, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='uid', full_name='device_config.Devices.AccessPoint.Ap.uid', index=5,
      number=6, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=739,
  serialized_end=838,
)

_DEVICES_ACCESSPOINT = _descriptor.Descriptor(
  name='AccessPoint',
  full_name='device_config.Devices.AccessPoint',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='ap', full_name='device_config.Devices.AccessPoint.ap', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[_DEVICES_ACCESSPOINT_AP, ],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=673,
  serialized_end=838,
)

_DEVICES_LORAWANINFORMATION = _descriptor.Descriptor(
  name='LoraWanInformation',
  full_name='device_config.Devices.LoraWanInformation',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='temp', full_name='device_config.Devices.LoraWanInformation.temp', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=840,
  serialized_end=874,
)

_DEVICES = _descriptor.Descriptor(
  name='Devices',
  full_name='device_config.Devices',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='access_point', full_name='device_config.Devices.access_point', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='lora_wan_information', full_name='device_config.Devices.lora_wan_information', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[_DEVICES_ACCESSPOINT, _DEVICES_LORAWANINFORMATION, ],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=530,
  serialized_end=874,
)

_DEVICES_ACCESSPOINT_AP.containing_type = _DEVICES_ACCESSPOINT
_DEVICES_ACCESSPOINT.fields_by_name['ap'].message_type = _DEVICES_ACCESSPOINT_AP
_DEVICES_ACCESSPOINT.containing_type = _DEVICES
_DEVICES_LORAWANINFORMATION.containing_type = _DEVICES
_DEVICES.fields_by_name['access_point'].message_type = _DEVICES_ACCESSPOINT
_DEVICES.fields_by_name['lora_wan_information'].message_type = _DEVICES_LORAWANINFORMATION
DESCRIPTOR.message_types_by_name['EditConfigRequest'] = _EDITCONFIGREQUEST
DESCRIPTOR.message_types_by_name['EditConfigResponse'] = _EDITCONFIGRESPONSE
DESCRIPTOR.message_types_by_name['GetConfigRequest'] = _GETCONFIGREQUEST
DESCRIPTOR.message_types_by_name['GetConfigResponse'] = _GETCONFIGRESPONSE
DESCRIPTOR.message_types_by_name['HelloRequest'] = _HELLOREQUEST
DESCRIPTOR.message_types_by_name['HelloResponse'] = _HELLORESPONSE
DESCRIPTOR.message_types_by_name['LockRequest'] = _LOCKREQUEST
DESCRIPTOR.message_types_by_name['LockResponse'] = _LOCKRESPONSE
DESCRIPTOR.message_types_by_name['Devices'] = _DEVICES

EditConfigRequest = _reflection.GeneratedProtocolMessageType('EditConfigRequest', (_message.Message,), dict(
  DESCRIPTOR = _EDITCONFIGREQUEST,
  __module__ = 'device_config_pb2'
  # @@protoc_insertion_point(class_scope:device_config.EditConfigRequest)
  ))
_sym_db.RegisterMessage(EditConfigRequest)

EditConfigResponse = _reflection.GeneratedProtocolMessageType('EditConfigResponse', (_message.Message,), dict(
  DESCRIPTOR = _EDITCONFIGRESPONSE,
  __module__ = 'device_config_pb2'
  # @@protoc_insertion_point(class_scope:device_config.EditConfigResponse)
  ))
_sym_db.RegisterMessage(EditConfigResponse)

GetConfigRequest = _reflection.GeneratedProtocolMessageType('GetConfigRequest', (_message.Message,), dict(
  DESCRIPTOR = _GETCONFIGREQUEST,
  __module__ = 'device_config_pb2'
  # @@protoc_insertion_point(class_scope:device_config.GetConfigRequest)
  ))
_sym_db.RegisterMessage(GetConfigRequest)

GetConfigResponse = _reflection.GeneratedProtocolMessageType('GetConfigResponse', (_message.Message,), dict(
  DESCRIPTOR = _GETCONFIGRESPONSE,
  __module__ = 'device_config_pb2'
  # @@protoc_insertion_point(class_scope:device_config.GetConfigResponse)
  ))
_sym_db.RegisterMessage(GetConfigResponse)

HelloRequest = _reflection.GeneratedProtocolMessageType('HelloRequest', (_message.Message,), dict(
  DESCRIPTOR = _HELLOREQUEST,
  __module__ = 'device_config_pb2'
  # @@protoc_insertion_point(class_scope:device_config.HelloRequest)
  ))
_sym_db.RegisterMessage(HelloRequest)

HelloResponse = _reflection.GeneratedProtocolMessageType('HelloResponse', (_message.Message,), dict(
  DESCRIPTOR = _HELLORESPONSE,
  __module__ = 'device_config_pb2'
  # @@protoc_insertion_point(class_scope:device_config.HelloResponse)
  ))
_sym_db.RegisterMessage(HelloResponse)

LockRequest = _reflection.GeneratedProtocolMessageType('LockRequest', (_message.Message,), dict(
  DESCRIPTOR = _LOCKREQUEST,
  __module__ = 'device_config_pb2'
  # @@protoc_insertion_point(class_scope:device_config.LockRequest)
  ))
_sym_db.RegisterMessage(LockRequest)

LockResponse = _reflection.GeneratedProtocolMessageType('LockResponse', (_message.Message,), dict(
  DESCRIPTOR = _LOCKRESPONSE,
  __module__ = 'device_config_pb2'
  # @@protoc_insertion_point(class_scope:device_config.LockResponse)
  ))
_sym_db.RegisterMessage(LockResponse)

Devices = _reflection.GeneratedProtocolMessageType('Devices', (_message.Message,), dict(

  AccessPoint = _reflection.GeneratedProtocolMessageType('AccessPoint', (_message.Message,), dict(

    Ap = _reflection.GeneratedProtocolMessageType('Ap', (_message.Message,), dict(
      DESCRIPTOR = _DEVICES_ACCESSPOINT_AP,
      __module__ = 'device_config_pb2'
      # @@protoc_insertion_point(class_scope:device_config.Devices.AccessPoint.Ap)
      ))
    ,
    DESCRIPTOR = _DEVICES_ACCESSPOINT,
    __module__ = 'device_config_pb2'
    # @@protoc_insertion_point(class_scope:device_config.Devices.AccessPoint)
    ))
  ,

  LoraWanInformation = _reflection.GeneratedProtocolMessageType('LoraWanInformation', (_message.Message,), dict(
    DESCRIPTOR = _DEVICES_LORAWANINFORMATION,
    __module__ = 'device_config_pb2'
    # @@protoc_insertion_point(class_scope:device_config.Devices.LoraWanInformation)
    ))
  ,
  DESCRIPTOR = _DEVICES,
  __module__ = 'device_config_pb2'
  # @@protoc_insertion_point(class_scope:device_config.Devices)
  ))
_sym_db.RegisterMessage(Devices)
_sym_db.RegisterMessage(Devices.AccessPoint)
_sym_db.RegisterMessage(Devices.AccessPoint.Ap)
_sym_db.RegisterMessage(Devices.LoraWanInformation)


try:
  # THESE ELEMENTS WILL BE DEPRECATED.
  # Please use the generated *_pb2_grpc.py files instead.
  import grpc
  from grpc.framework.common import cardinality
  from grpc.framework.interfaces.face import utilities as face_utilities
  from grpc.beta import implementations as beta_implementations
  from grpc.beta import interfaces as beta_interfaces


  class DeviceConfigStub(object):

    def __init__(self, channel):
      """Constructor.

      Args:
        channel: A grpc.Channel.
      """
      self.EditConfig = channel.unary_unary(
          '/device_config.DeviceConfig/EditConfig',
          request_serializer=EditConfigRequest.SerializeToString,
          response_deserializer=EditConfigResponse.FromString,
          )
      self.GetConfig = channel.unary_unary(
          '/device_config.DeviceConfig/GetConfig',
          request_serializer=GetConfigRequest.SerializeToString,
          response_deserializer=GetConfigResponse.FromString,
          )
      self.Hello = channel.unary_unary(
          '/device_config.DeviceConfig/Hello',
          request_serializer=HelloRequest.SerializeToString,
          response_deserializer=HelloResponse.FromString,
          )
      self.Lock = channel.unary_unary(
          '/device_config.DeviceConfig/Lock',
          request_serializer=LockRequest.SerializeToString,
          response_deserializer=LockResponse.FromString,
          )


  class DeviceConfigServicer(object):

    def EditConfig(self, request, context):
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def GetConfig(self, request, context):
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def Hello(self, request, context):
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def Lock(self, request, context):
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')


  def add_DeviceConfigServicer_to_server(servicer, server):
    rpc_method_handlers = {
        'EditConfig': grpc.unary_unary_rpc_method_handler(
            servicer.EditConfig,
            request_deserializer=EditConfigRequest.FromString,
            response_serializer=EditConfigResponse.SerializeToString,
        ),
        'GetConfig': grpc.unary_unary_rpc_method_handler(
            servicer.GetConfig,
            request_deserializer=GetConfigRequest.FromString,
            response_serializer=GetConfigResponse.SerializeToString,
        ),
        'Hello': grpc.unary_unary_rpc_method_handler(
            servicer.Hello,
            request_deserializer=HelloRequest.FromString,
            response_serializer=HelloResponse.SerializeToString,
        ),
        'Lock': grpc.unary_unary_rpc_method_handler(
            servicer.Lock,
            request_deserializer=LockRequest.FromString,
            response_serializer=LockResponse.SerializeToString,
        ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
        'device_config.DeviceConfig', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


  class BetaDeviceConfigServicer(object):
    """The Beta API is deprecated for 0.15.0 and later.

    It is recommended to use the GA API (classes and functions in this
    file not marked beta) for all further purposes. This class was generated
    only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0."""
    def EditConfig(self, request, context):
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def GetConfig(self, request, context):
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def Hello(self, request, context):
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def Lock(self, request, context):
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)


  class BetaDeviceConfigStub(object):
    """The Beta API is deprecated for 0.15.0 and later.

    It is recommended to use the GA API (classes and functions in this
    file not marked beta) for all further purposes. This class was generated
    only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0."""
    def EditConfig(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      raise NotImplementedError()
    EditConfig.future = None
    def GetConfig(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      raise NotImplementedError()
    GetConfig.future = None
    def Hello(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      raise NotImplementedError()
    Hello.future = None
    def Lock(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      raise NotImplementedError()
    Lock.future = None


  def beta_create_DeviceConfig_server(servicer, pool=None, pool_size=None, default_timeout=None, maximum_timeout=None):
    """The Beta API is deprecated for 0.15.0 and later.

    It is recommended to use the GA API (classes and functions in this
    file not marked beta) for all further purposes. This function was
    generated only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0"""
    request_deserializers = {
      ('device_config.DeviceConfig', 'EditConfig'): EditConfigRequest.FromString,
      ('device_config.DeviceConfig', 'GetConfig'): GetConfigRequest.FromString,
      ('device_config.DeviceConfig', 'Hello'): HelloRequest.FromString,
      ('device_config.DeviceConfig', 'Lock'): LockRequest.FromString,
    }
    response_serializers = {
      ('device_config.DeviceConfig', 'EditConfig'): EditConfigResponse.SerializeToString,
      ('device_config.DeviceConfig', 'GetConfig'): GetConfigResponse.SerializeToString,
      ('device_config.DeviceConfig', 'Hello'): HelloResponse.SerializeToString,
      ('device_config.DeviceConfig', 'Lock'): LockResponse.SerializeToString,
    }
    method_implementations = {
      ('device_config.DeviceConfig', 'EditConfig'): face_utilities.unary_unary_inline(servicer.EditConfig),
      ('device_config.DeviceConfig', 'GetConfig'): face_utilities.unary_unary_inline(servicer.GetConfig),
      ('device_config.DeviceConfig', 'Hello'): face_utilities.unary_unary_inline(servicer.Hello),
      ('device_config.DeviceConfig', 'Lock'): face_utilities.unary_unary_inline(servicer.Lock),
    }
    server_options = beta_implementations.server_options(request_deserializers=request_deserializers, response_serializers=response_serializers, thread_pool=pool, thread_pool_size=pool_size, default_timeout=default_timeout, maximum_timeout=maximum_timeout)
    return beta_implementations.server(method_implementations, options=server_options)


  def beta_create_DeviceConfig_stub(channel, host=None, metadata_transformer=None, pool=None, pool_size=None):
    """The Beta API is deprecated for 0.15.0 and later.

    It is recommended to use the GA API (classes and functions in this
    file not marked beta) for all further purposes. This function was
    generated only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0"""
    request_serializers = {
      ('device_config.DeviceConfig', 'EditConfig'): EditConfigRequest.SerializeToString,
      ('device_config.DeviceConfig', 'GetConfig'): GetConfigRequest.SerializeToString,
      ('device_config.DeviceConfig', 'Hello'): HelloRequest.SerializeToString,
      ('device_config.DeviceConfig', 'Lock'): LockRequest.SerializeToString,
    }
    response_deserializers = {
      ('device_config.DeviceConfig', 'EditConfig'): EditConfigResponse.FromString,
      ('device_config.DeviceConfig', 'GetConfig'): GetConfigResponse.FromString,
      ('device_config.DeviceConfig', 'Hello'): HelloResponse.FromString,
      ('device_config.DeviceConfig', 'Lock'): LockResponse.FromString,
    }
    cardinalities = {
      'EditConfig': cardinality.Cardinality.UNARY_UNARY,
      'GetConfig': cardinality.Cardinality.UNARY_UNARY,
      'Hello': cardinality.Cardinality.UNARY_UNARY,
      'Lock': cardinality.Cardinality.UNARY_UNARY,
    }
    stub_options = beta_implementations.stub_options(host=host, metadata_transformer=metadata_transformer, request_serializers=request_serializers, response_deserializers=response_deserializers, thread_pool=pool, thread_pool_size=pool_size)
    return beta_implementations.dynamic_stub(channel, 'device_config.DeviceConfig', cardinalities, options=stub_options)
except ImportError:
  pass
# @@protoc_insertion_point(module_scope)

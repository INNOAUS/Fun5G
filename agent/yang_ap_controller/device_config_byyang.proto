syntax = "proto3";
// Automatically generated by goyang https://github.com/openconfig/goyang
// compiled 2017-03-03T11:46:31Z
// do not delete the next line
// goyang-version 1
// module "device-config"
// namespace "urn:device-config"

// ff
package device_config;
service DeviceConfig {
  rpc EditConfig (EditConfigRequest) returns (EditConfigResponse);
  rpc GetConfig (GetConfigRequest) returns (GetConfigResponse);
  rpc Lock (LockRequest) returns (LockResponse);
}
message EditConfigRequest {
  enum CommandT {
    CommandT_START = 0;
    CommandT_STOP = 1;
    CommandT_MNULL = 2;
  };
  CommandT command_t = 1;
  string payload = 2;
}
message EditConfigResponse {
  string result = 1;
}
message GetConfigRequest {
  enum CommandT {
    CommandT_START = 0;
    CommandT_STOP = 1;
    CommandT_MNULL = 2;
  };
  CommandT command_t = 1;
  string payload = 2;
}
message GetConfigResponse {
  string result = 1;
}
message LockRequest {
  bool locking = 1;
}
message LockResponse {
  bool result = 1;
}

message Devices {
  message NetworkDevices {
    message AccessPointInformation {
      message ApList {
        message DetailInformation {
          uint32 channel = 1;
          string mode = 2;
        }
        DetailInformation detail_information = 1;
        enum PowerOnOff {
          PowerOnOff_OFF = 0;
          PowerOnOff_ON = 1;
        };
        PowerOnOff power_on_off = 2;
        string ssid = 3;
      }
      repeated ApList ap_list = 1;
    }
    AccessPointInformation access_point_information = 1;
    string ctr_ip = 2;
    enum Device {
      Device_ACCESS_POINT = 0;
      Device_LORA_WAN = 1;
      Device_UNKNOWN = 2;
    };
    Device device = 3;
    string ip = 4;
    message LoraWanInformation {
      string temp = 1;
    }
    LoraWanInformation lora_wan_information = 5;
    enum Os {
      Os_OPENWRT = 0;
      Os_UBUNTU = 1;
      Os_UBUNTU_MATE = 2;
      Os_UNKOWN = 3;
    };
    Os os = 6;
    string phys_ad = 7;
  }
  repeated NetworkDevices network_devices = 1;
}

// Do not delete the lines below, they preserve tag information for goyang.
// goyang-tag Devices network_devices/NetworkDevices[] 1
// goyang-tag Devices_NetworkDevices access_point_information/AccessPointInformation 1
// goyang-tag Devices_NetworkDevices ctr_ip/string 2
// goyang-tag Devices_NetworkDevices device/Device 3
// goyang-tag Devices_NetworkDevices ip/string 4
// goyang-tag Devices_NetworkDevices lora_wan_information/LoraWanInformation 5
// goyang-tag Devices_NetworkDevices os/Os 6
// goyang-tag Devices_NetworkDevices phys_ad/string 7
// goyang-tag Devices_NetworkDevices_AccessPointInformation ap_list/ApList[] 1
// goyang-tag Devices_NetworkDevices_AccessPointInformation_ApList detail_information/DetailInformation 1
// goyang-tag Devices_NetworkDevices_AccessPointInformation_ApList power_on_off/PowerOnOff 2
// goyang-tag Devices_NetworkDevices_AccessPointInformation_ApList ssid/string 3
// goyang-tag Devices_NetworkDevices_AccessPointInformation_ApList_DetailInformation channel/uint32 1
// goyang-tag Devices_NetworkDevices_AccessPointInformation_ApList_DetailInformation mode/string 2
// goyang-tag Devices_NetworkDevices_LoraWanInformation temp/string 1
// goyang-tag EditConfigRequest command_t/CommandT 1
// goyang-tag EditConfigRequest payload/string 2
// goyang-tag EditConfigResponse result/string 1
// goyang-tag GetConfigRequest command_t/CommandT 1
// goyang-tag GetConfigRequest payload/string 2
// goyang-tag GetConfigResponse result/string 1
// goyang-tag LockRequest locking/bool 1
// goyang-tag LockResponse result/bool 1

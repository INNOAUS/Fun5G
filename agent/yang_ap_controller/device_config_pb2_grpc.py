# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc
from grpc.framework.common import cardinality
from grpc.framework.interfaces.face import utilities as face_utilities

import device_config_pb2 as device__config__pb2


class DeviceConfigStub(object):

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.EditConfig = channel.unary_unary(
        '/device_config.DeviceConfig/EditConfig',
        request_serializer=device__config__pb2.EditConfigRequest.SerializeToString,
        response_deserializer=device__config__pb2.EditConfigResponse.FromString,
        )
    self.GetConfig = channel.unary_unary(
        '/device_config.DeviceConfig/GetConfig',
        request_serializer=device__config__pb2.GetConfigRequest.SerializeToString,
        response_deserializer=device__config__pb2.GetConfigResponse.FromString,
        )
    self.Hello = channel.unary_unary(
        '/device_config.DeviceConfig/Hello',
        request_serializer=device__config__pb2.HelloRequest.SerializeToString,
        response_deserializer=device__config__pb2.HelloResponse.FromString,
        )
    self.Lock = channel.unary_unary(
        '/device_config.DeviceConfig/Lock',
        request_serializer=device__config__pb2.LockRequest.SerializeToString,
        response_deserializer=device__config__pb2.LockResponse.FromString,
        )


class DeviceConfigServicer(object):

  def EditConfig(self, request, context):
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def GetConfig(self, request, context):
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def Hello(self, request, context):
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def Lock(self, request, context):
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_DeviceConfigServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'EditConfig': grpc.unary_unary_rpc_method_handler(
          servicer.EditConfig,
          request_deserializer=device__config__pb2.EditConfigRequest.FromString,
          response_serializer=device__config__pb2.EditConfigResponse.SerializeToString,
      ),
      'GetConfig': grpc.unary_unary_rpc_method_handler(
          servicer.GetConfig,
          request_deserializer=device__config__pb2.GetConfigRequest.FromString,
          response_serializer=device__config__pb2.GetConfigResponse.SerializeToString,
      ),
      'Hello': grpc.unary_unary_rpc_method_handler(
          servicer.Hello,
          request_deserializer=device__config__pb2.HelloRequest.FromString,
          response_serializer=device__config__pb2.HelloResponse.SerializeToString,
      ),
      'Lock': grpc.unary_unary_rpc_method_handler(
          servicer.Lock,
          request_deserializer=device__config__pb2.LockRequest.FromString,
          response_serializer=device__config__pb2.LockResponse.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'device_config.DeviceConfig', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
